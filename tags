!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
C	svm/svm_my_test.py	/^C = 1  # SVM regularization parameter$/;"	kind:variable	line:15
CLF_PICKLE_FILENAME	final_project/tester.py	/^CLF_PICKLE_FILENAME = "my_classifier.pkl"$/;"	kind:variable	line:77
DATASET_PICKLE_FILENAME	final_project/tester.py	/^DATASET_PICKLE_FILENAME = "my_dataset.pkl"$/;"	kind:variable	line:78
DecisionTreeClassifier	choose_your_own/your_algorithm.py	/^from sklearn.tree import DecisionTreeClassifier$/;"	kind:namespace	line:8
Draw	k_means/k_means_cluster.py	/^def Draw(pred, features, poi, mark_poi=False, name="image.png", f1_name="feature 1", f2_name="feature 2"):$/;"	kind:function	line:20
FEATURE_LIST_FILENAME	final_project/tester.py	/^FEATURE_LIST_FILENAME = "my_feature_list.pkl"$/;"	kind:variable	line:79
GaussianNB	final_project/poi_id.py	/^from sklearn.naive_bayes import GaussianNB$/;"	kind:namespace	line:35
GaussianNB	naive_bayes/nb_author_id.py	/^from sklearn.naive_bayes import GaussianNB$/;"	kind:namespace	line:29
GridSearchCV	pca/eigenfaces.py	/^from sklearn.grid_search import GridSearchCV$/;"	kind:namespace	line:28
KNeighborsClassifier	choose_your_own/your_algorithm.py	/^from sklearn.neighbors import KNeighborsClassifier$/;"	kind:namespace	line:7
PERF_FORMAT_STRING	final_project/tester.py	/^Recall: {:>0.{display_precision}f}\\tF1: {:>0.{display_precision}f}\\tF2: {:>0.{display_precision}f}"$/;"	kind:variable	line:21
RESULTS_FORMAT_STRING	final_project/tester.py	/^\\tFalse negatives: {:4d}\\tTrue negatives: {:4d}"$/;"	kind:variable	line:23
RandomizedPCA	pca/eigenfaces.py	/^from sklearn.decomposition import RandomizedPCA$/;"	kind:namespace	line:31
SVC	pca/eigenfaces.py	/^from sklearn.svm import SVC$/;"	kind:namespace	line:32
SelectPercentile	tools/email_preprocess.py	/^from sklearn.feature_selection import SelectPercentile, f_classif$/;"	kind:namespace	line:9
SnowballStemmer	tools/parse_out_email_text.py	/^from nltk.stem.snowball import SnowballStemmer$/;"	kind:namespace	line:3
StratifiedShuffleSplit	final_project/tester.py	/^from sklearn.cross_validation import StratifiedShuffleSplit$/;"	kind:namespace	line:15
TfidfVectorizer	feature_selection/find_signature.py	/^from sklearn.feature_extraction.text import TfidfVectorizer$/;"	kind:namespace	line:25
TfidfVectorizer	tools/email_preprocess.py	/^from sklearn.feature_extraction.text import TfidfVectorizer$/;"	kind:namespace	line:8
X	pca/eigenfaces.py	/^X = lfw_people.data$/;"	kind:variable	line:48
X	svm/svm_my_test.py	/^X = iris.data[:, :2]  # we only take the first two features. We could$/;"	kind:variable	line:7
X_test_pca	pca/eigenfaces.py	/^X_test_pca = pca.transform(X_test)$/;"	kind:variable	line:81
X_train_pca	pca/eigenfaces.py	/^X_train_pca = pca.transform(X_train)$/;"	kind:variable	line:80
Z	svm/svm_my_test.py	/^    Z = Z.reshape(xx.shape)$/;"	kind:variable	line:43
Z	svm/svm_my_test.py	/^    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])$/;"	kind:variable	line:40
acc	choose_your_own/your_algorithm.py	/^			acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:111
acc	choose_your_own/your_algorithm.py	/^		acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:44
acc	choose_your_own/your_algorithm.py	/^		acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:67
acc	choose_your_own/your_algorithm.py	/^		acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:89
acc	choose_your_own/your_algorithm.py	/^acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:118
acc	choose_your_own/your_algorithm.py	/^acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:53
acc	choose_your_own/your_algorithm.py	/^acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:76
acc	choose_your_own/your_algorithm.py	/^acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:97
acc	decision_tree/dt_author_id.py	/^	acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:38
acc	decision_tree/dt_author_id.py	/^	acc = clf.score(features_test, labels_test)$/;"	kind:variable	line:48
accuracy	naive_bayes/nb_author_id.py	/^accuracy = clf.score(features_test, labels_test)$/;"	kind:variable	line:38
accuracy	svm/svm_author_id.py	/^    accuracy = svc.score(features_test, labels_test)$/;"	kind:variable	line:37
ages	outliers/outlier_removal_regression.py	/^    ages       = numpy.reshape( numpy.array(ages), (len(ages), 1))$/;"	kind:variable	line:65
ages	outliers/outlier_removal_regression.py	/^ages       = numpy.reshape( numpy.array(ages), (len(ages), 1))$/;"	kind:variable	line:21
ages	outliers/outlier_removal_regression.py	/^ages = pickle.load( open("practice_outliers_ages.pkl", "r") )$/;"	kind:variable	line:12
args	choose_your_own/your_algorithm.py	/^				args = (n_neighbors, leaf_size, weights)$/;"	kind:variable	line:113
args	choose_your_own/your_algorithm.py	/^			args = (estimators, min_sample)$/;"	kind:variable	line:91
args	choose_your_own/your_algorithm.py	/^			args = (estimators, weight)$/;"	kind:variable	line:69
args	choose_your_own/your_algorithm.py	/^			args = (max_depth, min_samples_split)$/;"	kind:variable	line:46
args	choose_your_own/your_algorithm.py	/^args = ()$/;"	kind:variable	line:39
args	choose_your_own/your_algorithm.py	/^args = ()$/;"	kind:variable	line:62
authors	feature_selection/find_signature.py	/^authors = pickle.load( open(authors_file, "r") )$/;"	kind:variable	line:14
authors_file	feature_selection/find_signature.py	/^authors_file = "..\/text_learning\/your_email_authors.pkl"$/;"	kind:variable	line:12
base64	choose_your_own/class_vis.py	/^import base64$/;"	kind:namespace	line:38
best	choose_your_own/your_algorithm.py	/^				best = acc$/;"	kind:variable	line:114
best	choose_your_own/your_algorithm.py	/^			best = acc$/;"	kind:variable	line:47
best	choose_your_own/your_algorithm.py	/^			best = acc$/;"	kind:variable	line:70
best	choose_your_own/your_algorithm.py	/^			best = acc$/;"	kind:variable	line:92
best	choose_your_own/your_algorithm.py	/^best = 0$/;"	kind:variable	line:104
best	choose_your_own/your_algorithm.py	/^best = 0$/;"	kind:variable	line:83
best	choose_your_own/your_algorithm.py	/^best = 0.0$/;"	kind:variable	line:38
best	choose_your_own/your_algorithm.py	/^best = 0.0$/;"	kind:variable	line:61
bumpy_fast	choose_your_own/your_algorithm.py	/^bumpy_fast = [features_train[ii][1] for ii in range(0, len(features_train)) if labels_train[ii]==0]$/;"	kind:variable	line:17
bumpy_slow	choose_your_own/your_algorithm.py	/^bumpy_slow = [features_train[ii][1] for ii in range(0, len(features_train)) if labels_train[ii]==1]$/;"	kind:variable	line:19
cPickle	tools/email_preprocess.py	/^import cPickle$/;"	kind:namespace	line:4
class_vis.py	choose_your_own/class_vis.py	1;"	kind:file	line:1
classification_report	pca/eigenfaces.py	/^from sklearn.metrics import classification_report$/;"	kind:namespace	line:29
cleaned_data	outliers/outlier_removal_regression.py	/^    cleaned_data = outlierCleaner( predictions, ages_train, net_worths_train )$/;"	kind:variable	line:51
cleaned_data	outliers/outlier_removal_regression.py	/^cleaned_data = []$/;"	kind:variable	line:48
clf	choose_your_own/your_algorithm.py	/^			clf = KNeighborsClassifier(n_neighbors = n_neighbors, leaf_size = leaf_size, weights=weights, n_jobs = 8)$/;"	kind:variable	line:109
clf	choose_your_own/your_algorithm.py	/^		clf = DecisionTreeClassifier(max_depth = max_depth, min_samples_split=min_samples_split)$/;"	kind:variable	line:42
clf	choose_your_own/your_algorithm.py	/^		clf = ensemble.AdaBoostClassifier(n_estimators = estimators, learning_rate=weight\/10.0)$/;"	kind:variable	line:65
clf	choose_your_own/your_algorithm.py	/^		clf = ensemble.RandomForestClassifier(n_estimators = estimators, min_samples_split = min_sample)$/;"	kind:variable	line:87
clf	choose_your_own/your_algorithm.py	/^clf = DecisionTreeClassifier(max_depth = args[0], min_samples_split=args[1])$/;"	kind:variable	line:51
clf	choose_your_own/your_algorithm.py	/^clf = KNeighborsClassifier(n_neighbors = args[0], leaf_size = args[1], n_jobs = 8)$/;"	kind:variable	line:74
clf	choose_your_own/your_algorithm.py	/^clf = KNeighborsClassifier(n_neighbors = args[0], leaf_size = args[1], n_jobs = 8)$/;"	kind:variable	line:95
clf	choose_your_own/your_algorithm.py	/^clf = KNeighborsClassifier(n_neighbors = args[0], leaf_size = args[1], weights=args[2], n_jobs = 8)$/;"	kind:variable	line:116
clf	decision_tree/dt_author_id.py	/^	clf = tree.DecisionTreeClassifier(max_depth=max_depth)$/;"	kind:variable	line:35
clf	decision_tree/dt_author_id.py	/^	clf = tree.DecisionTreeClassifier(min_samples_split=min_split)$/;"	kind:variable	line:45
clf	final_project/poi_id.py	/^clf = GaussianNB()$/;"	kind:variable	line:36
clf	naive_bayes/nb_author_id.py	/^clf = GaussianNB()$/;"	kind:variable	line:30
clf	pca/eigenfaces.py	/^clf = GridSearchCV(SVC(kernel='rbf', class_weight='balanced'), param_grid)$/;"	kind:variable	line:95
clf	pca/eigenfaces.py	/^clf = clf.fit(X_train_pca, y_train)$/;"	kind:variable	line:96
confusion_matrix	pca/eigenfaces.py	/^from sklearn.metrics import confusion_matrix$/;"	kind:namespace	line:30
cross_validation	feature_selection/find_signature.py	/^from sklearn import cross_validation$/;"	kind:namespace	line:22
cross_validation	tools/email_preprocess.py	/^from sklearn import cross_validation$/;"	kind:namespace	line:7
data	evaluation/evaluate_poi_identifier.py	/^data = featureFormat(data_dict, features_list)$/;"	kind:variable	line:24
data	final_project/poi_id.py	/^data = featureFormat(my_dataset, features_list, sort_keys = True)$/;"	kind:variable	line:25
data	k_means/k_means_cluster.py	/^data = featureFormat(data_dict, features_list )$/;"	kind:variable	line:53
data	outliers/enron_outliers.py	/^data = featureFormat(data_dict, features)$/;"	kind:variable	line:13
data	regression/finance_regression.py	/^data = featureFormat( dictionary, features_list, remove_any_zeroes=True)$/;"	kind:variable	line:25
data	validation/validate_poi.py	/^data = featureFormat(data_dict, features_list)$/;"	kind:variable	line:25
data_dict	evaluation/evaluate_poi_identifier.py	/^data_dict = pickle.load(open("..\/final_project\/final_project_dataset.pkl", "r") )$/;"	kind:variable	line:19
data_dict	final_project/poi_id.py	/^    data_dict = pickle.load(data_file)$/;"	kind:variable	line:17
data_dict	k_means/k_means_cluster.py	/^data_dict = pickle.load( open("..\/final_project\/final_project_dataset.pkl", "r") )$/;"	kind:variable	line:42
data_dict	outliers/enron_outliers.py	/^data_dict = pickle.load( open("..\/final_project\/final_project_dataset.pkl", "r") )$/;"	kind:variable	line:11
data_dict	validation/validate_poi.py	/^data_dict = pickle.load(open("..\/final_project\/final_project_dataset.pkl", "r") )$/;"	kind:variable	line:18
datasets	svm/svm_my_test.py	/^from sklearn import svm, datasets$/;"	kind:namespace	line:3
dictionary	regression/finance_regression.py	/^dictionary = pickle.load( open("..\/final_project\/final_project_dataset_modified.pkl", "r") )$/;"	kind:variable	line:20
dt_author_id.py	decision_tree/dt_author_id.py	1;"	kind:file	line:1
dump_classifier_and_data	final_project/poi_id.py	/^from tester import dump_classifier_and_data$/;"	kind:namespace	line:8
dump_classifier_and_data	final_project/tester.py	/^def dump_classifier_and_data(clf, dataset, feature_list):$/;"	kind:function	line:81
eigenface_titles	pca/eigenfaces.py	/^eigenface_titles = ["eigenface %d" % i for i in range(eigenfaces.shape[0])]$/;"	kind:variable	line:143
eigenfaces	pca/eigenfaces.py	/^eigenfaces = pca.components_.reshape((n_components, h, w))$/;"	kind:variable	line:76
eigenfaces.py	pca/eigenfaces.py	1;"	kind:file	line:1
email	text_learning/vectorize_text.py	/^            email = open(path, "r")$/;"	kind:variable	line:48
email_preprocess.py	tools/email_preprocess.py	1;"	kind:file	line:1
enron_data	datasets_questions/explore_enron_data.py	/^enron_data = pickle.load(open("..\/final_project\/final_project_dataset.pkl", "r"))$/;"	kind:variable	line:20
enron_outliers.py	outliers/enron_outliers.py	1;"	kind:file	line:1
ensemble	choose_your_own/your_algorithm.py	/^from sklearn import ensemble$/;"	kind:namespace	line:6
evaluate_poi_identifier.py	evaluation/evaluate_poi_identifier.py	1;"	kind:file	line:1
explore_enron_data.py	datasets_questions/explore_enron_data.py	1;"	kind:file	line:1
f_classif	tools/email_preprocess.py	/^from sklearn.feature_selection import SelectPercentile, f_classif$/;"	kind:namespace	line:9
featureFormat	evaluation/evaluate_poi_identifier.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:17
featureFormat	final_project/poi_id.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:7
featureFormat	final_project/tester.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:17
featureFormat	k_means/k_means_cluster.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:15
featureFormat	outliers/enron_outliers.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:7
featureFormat	regression/finance_regression.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:19
featureFormat	tools/feature_format.py	/^def featureFormat( dictionary, features, remove_NaN=True, remove_all_zeroes=True, remove_any_zeroes=False, sort_keys = False):$/;"	kind:function	line:36
featureFormat	validation/validate_poi.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:16
feature_1	k_means/k_means_cluster.py	/^feature_1 = "salary"$/;"	kind:variable	line:49
feature_2	k_means/k_means_cluster.py	/^feature_2 = "exercised_stock_options"$/;"	kind:variable	line:50
feature_format.py	tools/feature_format.py	1;"	kind:file	line:1
features	outliers/enron_outliers.py	/^features = ["salary", "bonus"]$/;"	kind:variable	line:12
features_list	evaluation/evaluate_poi_identifier.py	/^features_list = ["poi", "salary"]$/;"	kind:variable	line:22
features_list	final_project/poi_id.py	/^features_list = ['poi','salary'] # You will need to use more features$/;"	kind:variable	line:13
features_list	k_means/k_means_cluster.py	/^features_list = [poi, feature_1, feature_2]$/;"	kind:variable	line:52
features_list	regression/finance_regression.py	/^features_list = ["bonus", "salary"]$/;"	kind:variable	line:24
features_list	validation/validate_poi.py	/^features_list = ["poi", "salary"]$/;"	kind:variable	line:23
features_test	feature_selection/find_signature.py	/^features_test  = vectorizer.transform(features_test).toarray()$/;"	kind:variable	line:29
features_train	decision_tree/dt_author_id.py	/^features_train = features_train[:(int)(len(features_train) * split)] $/;"	kind:variable	line:26
features_train	feature_selection/find_signature.py	/^features_train = features_train[:150].toarray()$/;"	kind:variable	line:35
features_train	feature_selection/find_signature.py	/^features_train = vectorizer.fit_transform(features_train)$/;"	kind:variable	line:28
fetch_lfw_people	pca/eigenfaces.py	/^from sklearn.datasets import fetch_lfw_people$/;"	kind:namespace	line:27
finance_regression.py	regression/finance_regression.py	1;"	kind:file	line:1
find_signature.py	feature_selection/find_signature.py	1;"	kind:file	line:1
from_chris	text_learning/vectorize_text.py	/^from_chris = open("from_chris.txt", "r")$/;"	kind:variable	line:27
from_data	text_learning/vectorize_text.py	/^from_data = []$/;"	kind:variable	line:29
from_sara	text_learning/vectorize_text.py	/^from_sara  = open("from_sara.txt", "r")$/;"	kind:variable	line:26
grade_fast	choose_your_own/your_algorithm.py	/^grade_fast = [features_train[ii][0] for ii in range(0, len(features_train)) if labels_train[ii]==0]$/;"	kind:variable	line:16
grade_slow	choose_your_own/your_algorithm.py	/^grade_slow = [features_train[ii][0] for ii in range(0, len(features_train)) if labels_train[ii]==1]$/;"	kind:variable	line:18
h	svm/svm_my_test.py	/^h = .02  # step size in the mesh$/;"	kind:variable	line:11
iris	svm/svm_my_test.py	/^iris = datasets.load_iris()$/;"	kind:variable	line:6
json	choose_your_own/class_vis.py	/^import json$/;"	kind:namespace	line:39
k_means_cluster.py	k_means/k_means_cluster.py	1;"	kind:file	line:1
labels_train	decision_tree/dt_author_id.py	/^labels_train = labels_train[:int(len(labels_train) * split)] $/;"	kind:variable	line:27
labels_train	feature_selection/find_signature.py	/^labels_train   = labels_train[:150]$/;"	kind:variable	line:36
lfw_people	pca/eigenfaces.py	/^lfw_people = fetch_lfw_people(min_faces_per_person=70, resize=0.4)$/;"	kind:variable	line:40
lin_svc	svm/svm_my_test.py	/^lin_svc = svm.LinearSVC(C=C).fit(X, y)$/;"	kind:variable	line:19
load_classifier_and_data	final_project/tester.py	/^def load_classifier_and_data():$/;"	kind:function	line:89
logging	pca/eigenfaces.py	/^import logging$/;"	kind:namespace	line:22
main	final_project/tester.py	/^def main():$/;"	kind:function	line:98
main	tools/parse_out_email_text.py	/^def main():$/;"	kind:function	line:45
makeTerrainData	choose_your_own/prep_terrain_data.py	/^def makeTerrainData(n_points=1000):$/;"	kind:function	line:5
makeTerrainData	choose_your_own/your_algorithm.py	/^from prep_terrain_data import makeTerrainData$/;"	kind:namespace	line:4
matplotlib	choose_your_own/class_vis.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:4
matplotlib	choose_your_own/your_algorithm.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:3
matplotlib	k_means/k_means_cluster.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:12
matplotlib	outliers/enron_outliers.py	/^import matplotlib.pyplot$/;"	kind:namespace	line:5
matplotlib	outliers/outlier_removal_regression.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:5
matplotlib	regression/finance_regression.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:49
matplotlib	svm/svm_my_test.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:2
my_dataset	final_project/poi_id.py	/^my_dataset = data_dict$/;"	kind:variable	line:22
n_classes	pca/eigenfaces.py	/^n_classes = target_names.shape[0]$/;"	kind:variable	line:54
n_components	pca/eigenfaces.py	/^n_components = 150$/;"	kind:variable	line:69
n_features	pca/eigenfaces.py	/^n_features = X.shape[1]$/;"	kind:variable	line:49
nb_author_id.py	naive_bayes/nb_author_id.py	1;"	kind:file	line:1
net_worths	outliers/outlier_removal_regression.py	/^    net_worths = numpy.reshape( numpy.array(net_worths), (len(net_worths), 1))$/;"	kind:variable	line:66
net_worths	outliers/outlier_removal_regression.py	/^net_worths = numpy.reshape( numpy.array(net_worths), (len(net_worths), 1))$/;"	kind:variable	line:22
net_worths	outliers/outlier_removal_regression.py	/^net_worths = pickle.load( open("practice_outliers_net_worths.pkl", "r") )$/;"	kind:variable	line:13
nltk	tools/startup.py	/^    import nltk$/;"	kind:namespace	line:6
nonZero	svm/svm_author_id.py	/^    nonZero = np.count_nonzero(pred)$/;"	kind:variable	line:41
np	choose_your_own/class_vis.py	/^import numpy as np$/;"	kind:namespace	line:3
np	pca/eigenfaces.py	/^import numpy as np$/;"	kind:namespace	line:24
np	svm/svm_author_id.py	/^import numpy as np$/;"	kind:namespace	line:29
np	svm/svm_my_test.py	/^import numpy as np$/;"	kind:namespace	line:1
np	tools/feature_format.py	/^import numpy as np$/;"	kind:namespace	line:34
numpy	feature_selection/find_signature.py	/^import numpy$/;"	kind:namespace	line:4
numpy	k_means/k_means_cluster.py	/^import numpy$/;"	kind:namespace	line:11
numpy	outliers/outlier_removal_regression.py	/^import numpy$/;"	kind:namespace	line:4
numpy	tools/email_preprocess.py	/^import numpy$/;"	kind:namespace	line:5
numpy	tools/startup.py	/^    import numpy$/;"	kind:namespace	line:12
os	text_learning/vectorize_text.py	/^import os$/;"	kind:namespace	line:3
os	tools/startup.py	/^import os$/;"	kind:namespace	line:42
outlierCleaner	outliers/outlier_cleaner.py	/^def outlierCleaner(predictions, ages, net_worths):$/;"	kind:function	line:4
outlierCleaner	outliers/outlier_removal_regression.py	/^from outlier_cleaner import outlierCleaner$/;"	kind:namespace	line:8
outlier_cleaner.py	outliers/outlier_cleaner.py	1;"	kind:file	line:1
outlier_removal_regression.py	outliers/outlier_removal_regression.py	1;"	kind:file	line:1
output_image	choose_your_own/class_vis.py	/^def output_image(name, format, bytes):$/;"	kind:function	line:42
param_grid	pca/eigenfaces.py	/^param_grid = {$/;"	kind:variable	line:90
parseOutText	text_learning/vectorize_text.py	/^from parse_out_email_text import parseOutText$/;"	kind:namespace	line:9
parseOutText	tools/parse_out_email_text.py	/^def parseOutText(f):$/;"	kind:function	line:6
parse_out_email_text.py	tools/parse_out_email_text.py	1;"	kind:file	line:1
path	text_learning/vectorize_text.py	/^            path = os.path.join('..', path[:-1])$/;"	kind:variable	line:46
pca	pca/eigenfaces.py	/^pca = RandomizedPCA(n_components=n_components, whiten=True).fit(X_train)$/;"	kind:variable	line:73
pickle	datasets_questions/explore_enron_data.py	/^import pickle$/;"	kind:namespace	line:18
pickle	evaluation/evaluate_poi_identifier.py	/^import pickle$/;"	kind:namespace	line:14
pickle	feature_selection/find_signature.py	/^import pickle$/;"	kind:namespace	line:3
pickle	final_project/poi_id.py	/^import pickle$/;"	kind:namespace	line:4
pickle	final_project/tester.py	/^import pickle$/;"	kind:namespace	line:13
pickle	k_means/k_means_cluster.py	/^import pickle$/;"	kind:namespace	line:10
pickle	outliers/enron_outliers.py	/^import pickle$/;"	kind:namespace	line:3
pickle	outliers/outlier_removal_regression.py	/^import pickle$/;"	kind:namespace	line:6
pickle	regression/finance_regression.py	/^import pickle$/;"	kind:namespace	line:17
pickle	text_learning/vectorize_text.py	/^import pickle$/;"	kind:namespace	line:4
pickle	tools/email_preprocess.py	/^import pickle$/;"	kind:namespace	line:3
pickle	tools/feature_format.py	/^        import pickle$/;"	kind:namespace	line:57
pickle	validation/validate_poi.py	/^import pickle$/;"	kind:namespace	line:13
pl	choose_your_own/class_vis.py	/^import pylab as pl$/;"	kind:namespace	line:5
pl	pca/eigenfaces.py	/^import pylab as pl$/;"	kind:namespace	line:23
plot_gallery	pca/eigenfaces.py	/^def plot_gallery(images, titles, h, w, n_row=3, n_col=4):$/;"	kind:function	line:117
plt	choose_your_own/class_vis.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:4
plt	choose_your_own/your_algorithm.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:3
plt	k_means/k_means_cluster.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:12
plt	outliers/outlier_removal_regression.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:5
plt	regression/finance_regression.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:49
plt	svm/svm_my_test.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:2
poi	k_means/k_means_cluster.py	/^poi  = "poi"$/;"	kind:variable	line:51
poiEmails	final_project/poi_email_addresses.py	/^def poiEmails():$/;"	kind:function	line:1
poi_email_addresses.py	final_project/poi_email_addresses.py	1;"	kind:file	line:1
poi_id.py	final_project/poi_id.py	1;"	kind:file	line:1
poly_svc	svm/svm_my_test.py	/^poly_svc = svm.SVC(kernel='poly', degree=3, C=C).fit(X, y)$/;"	kind:variable	line:18
pred	svm/svm_author_id.py	/^    pred = svc.predict(features_test)$/;"	kind:variable	line:40
prediction_titles	pca/eigenfaces.py	/^prediction_titles = [title(y_pred, y_test, target_names, i)$/;"	kind:variable	line:136
predictions	outliers/outlier_removal_regression.py	/^    predictions = reg.predict(ages_train)$/;"	kind:variable	line:50
prep_terrain_data.py	choose_your_own/prep_terrain_data.py	1;"	kind:file	line:1
preprocess	decision_tree/dt_author_id.py	/^from email_preprocess import preprocess$/;"	kind:namespace	line:14
preprocess	naive_bayes/nb_author_id.py	/^from email_preprocess import preprocess$/;"	kind:namespace	line:16
preprocess	svm/svm_author_id.py	/^from email_preprocess import preprocess$/;"	kind:namespace	line:14
preprocess	tools/email_preprocess.py	/^def preprocess(words_file = "..\/tools\/word_data.pkl", authors_file="..\/tools\/email_authors.pkl"):$/;"	kind:function	line:13
prettyPicture	choose_your_own/class_vis.py	/^def prettyPicture(clf, X_test, y_test, filename="test.png"):$/;"	kind:function	line:7
prettyPicture	choose_your_own/your_algorithm.py	/^from class_vis import prettyPicture$/;"	kind:namespace	line:5
pyplot	outliers/enron_outliers.py	/^import matplotlib.pyplot$/;"	kind:namespace	line:5
random	choose_your_own/prep_terrain_data.py	/^import random$/;"	kind:namespace	line:2
random	outliers/outlier_removal_regression.py	/^import random$/;"	kind:namespace	line:3
rbf_svc	svm/svm_my_test.py	/^rbf_svc = svm.SVC(kernel='rbf', gamma=0.1, C=C).fit(X, y)$/;"	kind:variable	line:17
re	text_learning/vectorize_text.py	/^import re$/;"	kind:namespace	line:5
scipy	tools/startup.py	/^    import scipy$/;"	kind:namespace	line:18
sklearn	tools/startup.py	/^    import sklearn$/;"	kind:namespace	line:24
split	decision_tree/dt_author_id.py	/^split = 1$/;"	kind:variable	line:24
startTime	naive_bayes/nb_author_id.py	/^startTime = time()$/;"	kind:variable	line:31
startTime	naive_bayes/nb_author_id.py	/^startTime = time()$/;"	kind:variable	line:34
startTime	svm/svm_author_id.py	/^    startTime = time()$/;"	kind:variable	line:32
startTime	svm/svm_author_id.py	/^    startTime = time()$/;"	kind:variable	line:36
startup.py	tools/startup.py	1;"	kind:file	line:1
stop_words	feature_selection/find_signature.py	/^                             stop_words='english')$/;"	kind:variable	line:27
string	tools/parse_out_email_text.py	/^import string$/;"	kind:namespace	line:4
subprocess	choose_your_own/class_vis.py	/^import subprocess$/;"	kind:namespace	line:40
svc	svm/svm_author_id.py	/^    svc = svm.SVC(C=C, kernel='rbf')$/;"	kind:variable	line:31
svc	svm/svm_my_test.py	/^svc = svm.SVC(kernel='linear', C=C).fit(X, y)$/;"	kind:variable	line:16
svm	svm/svm_author_id.py	/^from sklearn import svm$/;"	kind:namespace	line:28
svm	svm/svm_my_test.py	/^from sklearn import svm, datasets$/;"	kind:namespace	line:3
svm_author_id.py	svm/svm_author_id.py	1;"	kind:file	line:1
svm_my_test.py	svm/svm_my_test.py	1;"	kind:file	line:1
sys	decision_tree/dt_author_id.py	/^import sys$/;"	kind:namespace	line:11
sys	evaluation/evaluate_poi_identifier.py	/^import sys$/;"	kind:namespace	line:15
sys	final_project/poi_id.py	/^import sys$/;"	kind:namespace	line:3
sys	final_project/tester.py	/^import sys$/;"	kind:namespace	line:14
sys	k_means/k_means_cluster.py	/^import sys$/;"	kind:namespace	line:13
sys	naive_bayes/nb_author_id.py	/^import sys$/;"	kind:namespace	line:13
sys	outliers/enron_outliers.py	/^import sys$/;"	kind:namespace	line:4
sys	regression/finance_regression.py	/^import sys$/;"	kind:namespace	line:16
sys	svm/svm_author_id.py	/^import sys$/;"	kind:namespace	line:11
sys	text_learning/vectorize_text.py	/^import sys$/;"	kind:namespace	line:6
sys	validation/validate_poi.py	/^import sys$/;"	kind:namespace	line:14
t0	pca/eigenfaces.py	/^t0 = time()$/;"	kind:variable	line:106
t0	pca/eigenfaces.py	/^t0 = time()$/;"	kind:variable	line:72
t0	pca/eigenfaces.py	/^t0 = time()$/;"	kind:variable	line:79
t0	pca/eigenfaces.py	/^t0 = time()$/;"	kind:variable	line:89
tarfile	tools/startup.py	/^import tarfile$/;"	kind:namespace	line:41
targetFeatureSplit	evaluation/evaluate_poi_identifier.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:17
targetFeatureSplit	final_project/poi_id.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:7
targetFeatureSplit	final_project/tester.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:17
targetFeatureSplit	k_means/k_means_cluster.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:15
targetFeatureSplit	outliers/enron_outliers.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:7
targetFeatureSplit	regression/finance_regression.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:19
targetFeatureSplit	tools/feature_format.py	/^def targetFeatureSplit( data ):$/;"	kind:function	line:105
targetFeatureSplit	validation/validate_poi.py	/^from feature_format import featureFormat, targetFeatureSplit$/;"	kind:namespace	line:16
target_names	pca/eigenfaces.py	/^target_names = lfw_people.target_names$/;"	kind:variable	line:53
temp_counter	text_learning/vectorize_text.py	/^temp_counter = 0$/;"	kind:variable	line:37
test_classifier	final_project/tester.py	/^def test_classifier(clf, dataset, feature_list, folds = 1000):$/;"	kind:function	line:25
test_color	regression/finance_regression.py	/^test_color = "b"$/;"	kind:variable	line:32
tester.py	final_project/tester.py	1;"	kind:file	line:1
tfile	tools/startup.py	/^tfile = tarfile.open("enron_mail_20150507.tgz", "r:gz")$/;"	kind:variable	line:44
time	decision_tree/dt_author_id.py	/^from time import time$/;"	kind:namespace	line:12
time	naive_bayes/nb_author_id.py	/^from time import time$/;"	kind:namespace	line:14
time	pca/eigenfaces.py	/^from time import time$/;"	kind:namespace	line:21
time	svm/svm_author_id.py	/^from time import time$/;"	kind:namespace	line:12
title	pca/eigenfaces.py	/^def title(y_pred, y_test, target_names, i):$/;"	kind:function	line:131
titles	svm/svm_my_test.py	/^titles = ['SVC with linear kernel',$/;"	kind:variable	line:28
train_color	regression/finance_regression.py	/^train_color = "b"$/;"	kind:variable	line:31
train_test_split	final_project/poi_id.py	/^from sklearn.cross_validation import train_test_split$/;"	kind:namespace	line:46
train_test_split	outliers/outlier_removal_regression.py	/^from sklearn.cross_validation import train_test_split$/;"	kind:namespace	line:23
train_test_split	pca/eigenfaces.py	/^from sklearn.cross_validation import train_test_split$/;"	kind:namespace	line:26
train_test_split	regression/finance_regression.py	/^from sklearn.cross_validation import train_test_split$/;"	kind:namespace	line:29
tree	decision_tree/dt_author_id.py	/^from sklearn import tree$/;"	kind:namespace	line:15
url	tools/startup.py	/^url = "https:\/\/www.cs.cmu.edu\/~.\/enron\/enron_mail_20150507.tgz"$/;"	kind:variable	line:34
urllib	tools/startup.py	/^import urllib$/;"	kind:namespace	line:33
validate_poi.py	validation/validate_poi.py	1;"	kind:file	line:1
vectorize_text.py	text_learning/vectorize_text.py	1;"	kind:file	line:1
vectorizer	feature_selection/find_signature.py	/^vectorizer = TfidfVectorizer(sublinear_tf=True, max_df=0.5,$/;"	kind:variable	line:26
word_data	feature_selection/find_signature.py	/^word_data = pickle.load( open(words_file, "r"))$/;"	kind:variable	line:13
word_data	text_learning/vectorize_text.py	/^word_data = []$/;"	kind:variable	line:30
words_file	feature_selection/find_signature.py	/^words_file = "..\/text_learning\/your_word_data.pkl" $/;"	kind:variable	line:11
y	pca/eigenfaces.py	/^y = lfw_people.target$/;"	kind:variable	line:52
y	svm/svm_my_test.py	/^y = iris.target$/;"	kind:variable	line:9
y_pred	pca/eigenfaces.py	/^y_pred = clf.predict(X_test_pca)$/;"	kind:variable	line:107
your_algorithm.py	choose_your_own/your_algorithm.py	1;"	kind:file	line:1
